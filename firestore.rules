rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Basic function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if the authenticated user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if the update only affects specific fields
    function onlyChangesFields(allowedFields) {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(allowedFields);
    }
    
    // Check if an array field is only having items added or removed (for favoritePrompts)
    function isArrayModification(fieldName) {
      // Get the old and new arrays
      let oldArray = resource.data[fieldName] == null ? [] : resource.data[fieldName];
      let newArray = request.resource.data[fieldName] == null ? [] : request.resource.data[fieldName];
      
      // Check that only one item is being added or removed at a time
      return newArray.size() == oldArray.size() + 1 || newArray.size() == oldArray.size() - 1;
    }
    
    // User collection rules
    match /users/{userId} {
      // Allow create if authenticated and userId matches auth uid
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow read to the user's own document
      allow read: if isOwner(userId);
      
      // Allow update if authenticated and userId matches auth uid
      // Special case for favoritePrompts array which can be modified
      allow update: if isOwner(userId) && (
        // Regular update not touching protected fields
        (!request.resource.data.diff(resource.data).affectedKeys()
          .hasAny(['createdAt', 'promptCount'])) || 
          
        // OR only modifying the favoritePrompts array
        (onlyChangesFields(['favoritePrompts']) && isArrayModification('favoritePrompts'))
      );
    }
    
    // Prompt collection rules
    match /prompts/{promptId} {
      // Allow create if authenticated
      allow create: if isAuthenticated() && 
                     request.resource.data.authorId == request.auth.uid;
      
      // Allow read if document is public or user is the author
      allow read: if resource.data.isPublic == true || 
                   isOwner(resource.data.authorId);
      
      // Allow full update if user is the author
      allow update: if isOwner(resource.data.authorId);
      
      // Allow favoriteCount updates by any authenticated user
      allow update: if isAuthenticated() && 
                    onlyChangesFields(['favoriteCount']) && 
                    // Only allow incrementing or decrementing by 1
                    (request.resource.data.favoriteCount == resource.data.favoriteCount + 1 || 
                     request.resource.data.favoriteCount == resource.data.favoriteCount - 1);
      
      // Allow delete if user is the author
      allow delete: if isOwner(resource.data.authorId);
    }
  }
}